@model IMDB.Web.Models.ActorViewModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    <div class="validation-summary-errors panel panel-danger" data-valmsg-summary="true" id="errorActor" hidden>
        <div class="panel-heading">Please, correct the following errors:</div>
        <div class="panel-body">
            <ul id="errorDisplayActor"></ul>
        </div>
    </div>

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.ActorName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.ActorName, new { htmlAttributes = new { id = "js-actor-name", @class = "form-control pull-right" } })
                @Html.ValidationMessageFor(model => model.ActorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { id = "js-actor-dob", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.TextAreaFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">

                @*@Html.DropDownListFor(m => m.Gender, Model.GetGenderSelectItems(), new { htmlAttributes = new { id = "js-actor-gender", @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
{
    new SelectListItem { Text = "Male", Value = "1"},
    new SelectListItem { Text = "Female", Value = "2"},
    new SelectListItem { Text = "Others", Value = "3"}
})



                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
  
 

    </script>
}
