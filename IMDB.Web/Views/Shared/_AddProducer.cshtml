@model IMDB.Web.Models.ProducerViewModel


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div class="validation-summary-errors panel panel-danger" data-valmsg-summary="true" id="errorProducer" hidden>
            <div class="panel-heading">Please, correct the following errors:</div>
            <div class="panel-body">
                <ul id="errorDisplayProducer"></ul>
            </div>
        </div>

        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.ProducerName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.ProducerName, new { htmlAttributes = new { id = "js-producer-name", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProducerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProducerDOB, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.ProducerDOB, new { htmlAttributes = new { id = "js-producer-dob", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProducerDOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProducerBio, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.TextAreaFor(model => model.ProducerBio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProducerBio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProducerGender, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">

                    @*@Html.DropDownListFor(m => m.Gender, Model.GetGenderSelectItems(), new { htmlAttributes = new { id = "js-actor-gender", @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.ProducerGender, new List<SelectListItem>
{
    new SelectListItem { Text = "Male", Value = "1"},
    new SelectListItem { Text = "Female", Value = "2"},
    new SelectListItem { Text = "Others", Value = "3"}
})



                    @Html.ValidationMessageFor(model => model.ProducerGender, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }


